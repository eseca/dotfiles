#
# wm independent hotkeys
#

# terminal emulator
super + Return
	alacritty

# program launcher
{super, alt} + space
	rofi -fullscreen -show {run, window} -modi run,window -terminal alacritty

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd; \
    autorandr --change --force

# lock
super + BackSpace
	. /home/sk/.config/bspwm/scripts/lockscreen.sh

# sleep or hibernate
super + ctrl +  BackSpace
    systemctl hybrid-sleep

#
# bspwm hotkeys
#

# quit bspwm normally
super + alt + Escape
	bspc quit

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + y
	rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}' -fullscreen

super + p ; super + y
	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest node
super + g
	bspc node -s biggest

# select or create desktop
super + slash
	SELECTED_DESKTOP=$(bspc query --desktops --names | rofi -dmenu -p 'go to desktop' -fullscreen); \
	bspc desktop --focus $SELECTED_DESKTOP || \
		bspc monitor --add-desktops $SELECTED_DESKTOP && \
		bspc desktop --focus $SELECTED_DESKTOP

# bring desktop to focused monitor
super + control + slash
	SELECTED_DESKTOP=$(bspc query --desktops --names | rofi -dmenu -p 'bring desktop' -fullscreen); \
	bspc desktop $SELECTED_DESKTOP --to-monitor focused --follow && \
		bspc desktop --focus $SELECTED_DESKTOP

# rename desktop
super + r
	bspc desktop --rename $(rofi -dmenu -fullscreen -p "rename desktop")

# destroy desktop
super + alt {_,+ ctrl} + w
	bspc {desktop,monitor} --remove

super + p ; super + p : {minus,equal}
	CURRENT_WINDOW_GAP=$(bspc config -d focused window_gap); \
	NEW_WINDOW_GAP=$(($CURRENT_WINDOW_GAP{-,+}20)); \
	bspc config -d focused window_gap $NEW_WINDOW_GAP

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {x,y,z}
	bspc node -g {locked,sticky,private}

#
# focus/swap
#

# focus the node in given direction
super + {h,j,k,l}
	DIR={west,south,north,east}; \
	if ! bspc node -f $DIR ; then bspc monitor -f $DIR ; fi

# swap/insert into given direction
super + {shift, alt} + {h,j,k,l}
	bspc node {--swap,--to-node} {west,south,north,east}
# move entire desktop to given direction
super + shift + control + {h,j,k,l}
	bspc desktop --to-monitor {west,south,north,east}

# focus the next/previous node
super + {_,shift + }c
	bspc node -f {next,prev}

# focus the next/previous desktop
super + bracket{left,right}
	bspc desktop --focus {prev.local,next.local}

# swap the next/previous desktop
super + shift + bracket{left,right}
	bspc desktop --swap {prev.local,next.local}

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} 'focused:^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# change parent node ratio
super + semicolon ; n ; {1-9}
	bspc node $(bspc query -N -n @parent) --ratio 0.{1-9}

super + semicolon ; n : {minus,equal}
	bspc node $(bspc query -N -n @parent) --ratio {-,+}20

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

#
# Media keys
#

XF86MonBrightnessUp
	xbacklight -inc 10

XF86MonBrightnessDown
	xbacklight -dec 10

super + alt + {minus, equal}
	playerctl volume 0.03{-,+}

{ XF86AudioRaiseVolume , super + equal }
	amixer -D pulse sset Master 3%+

{ XF86AudioLowerVolume , super + minus }
	amixer -D pulse sset Master 3%-

XF86AudioMute
	amixer set Master toggle

XF86AudioMicMute
	amixer set Capture toggle

super + {comma,period}
	playerctl {play-pause,stop}

super + shift + {comma,period}
	playerctl {previous,next}

super + p ; super + bracket{left,right}
	playerctl position 5{-,+}

#
# Sound card control
#
#
# Select sound card
super + semicolon ; s
	SINK_ID=$(pactl list short sinks | cut -f1,2 | rofi -fullscreen -dmenu -p 'pulseaudio set default sink' | cut -f1); \
    pactl set-default-sink $SINK_ID && \
	pactl list short sink-inputs | while read line; do pactl move-sink-input "$line" "$SINK_ID"; done;

#
# Mouse simulation
#

#ctrl + alt + {Left, _}, 
#	xdotool mousemove_relative -- -5 0
#
#
#
# MISC
super + Next
	curl http://localhost:8080/up

super + Prior
	curl http://localhost:8080/down
